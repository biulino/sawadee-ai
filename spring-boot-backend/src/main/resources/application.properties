spring.application.name=kapadokya-reservation

# Database Configuration
spring.datasource.url=${DATABASE_URL:jdbc:postgresql://localhost:5432/hotel_booking}
spring.datasource.username=${DATABASE_USERNAME:postgres}
spring.datasource.password=${DATABASE_PASSWORD:postgres}
spring.datasource.driver-class-name=org.postgresql.Driver

# JPA Configuration
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=${JPA_SHOW_SQL:false}
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.format_sql=true

# Server Configuration
server.port=${SERVER_PORT:8090}
# server.servlet.context-path=/api  # Removed to avoid double /api prefix

# Security & JWT Configuration
spring.security.oauth2.resourceserver.jwt.issuer-uri=${KEYCLOAK_AUTH_SERVER_URL:http://localhost:8082}/realms/${KEYCLOAK_REALM:hotel-realm}
spring.security.oauth2.resourceserver.jwt.jwk-set-uri=${spring.security.oauth2.resourceserver.jwt.issuer-uri}/protocol/openid-connect/certs
jwt.auth.converter.resource-id=${KEYCLOAK_CLIENT_ID:hotel-client}
jwt.auth.converter.principle-attribute=preferred_username

# Keycloak Configuration
keycloak.auth-server-url=${KEYCLOAK_AUTH_SERVER_URL:http://localhost:8082}
keycloak.realm=${KEYCLOAK_REALM:hotel-realm}
keycloak.client-id=${KEYCLOAK_CLIENT_ID:hotel-client}
keycloak.client-secret=${KEYCLOAK_CLIENT_SECRET:DBCJJ3cWctIVh37cqrwgrGKYfOqElTjQ}
keycloak.admin-username=${KEYCLOAK_ADMIN:admin}
keycloak.admin-password=${KEYCLOAK_ADMIN_PASSWORD:Deomma2016...biulas}
keycloak.scope=openid

# Redis Configuration
spring.redis.host=${REDIS_HOST:localhost}
spring.redis.port=${REDIS_PORT:6379}
spring.redis.password=${REDIS_PASSWORD:}
spring.redis.timeout=2000ms
spring.cache.type=redis

# File Upload Configuration
spring.servlet.multipart.enabled=true
spring.servlet.multipart.max-file-size=${MAX_FILE_SIZE:10MB}
spring.servlet.multipart.max-request-size=${MAX_FILE_SIZE:10MB}
upload.dir=${UPLOAD_DIR:./uploads}

# Payment Configuration
stripe.api.key=${STRIPE_SECRET_KEY:sk_test_dummy}
stripe.webhook.secret=${STRIPE_WEBHOOK_SECRET:whsec_dummy}

# AI Services Configuration
ai.agent.url=${AI_AGENT_URL:http://localhost:5050}
ai.recommendation.url=${AI_RECOMMEND_URL:http://localhost:5051}
faceio.api.key=${FACEIO_API_KEY:}
faceio.app.id=${FACEIO_APP_ID:}

# CORS Configuration
cors.allowed.origins=${CORS_ALLOWED_ORIGINS:http://localhost:3000,http://localhost:3001}

# Actuator for monitoring
management.endpoints.web.exposure.include=health,info,metrics,prometheus
management.endpoint.health.show-details=always
management.endpoint.health.show-components=always

# Logging Configuration
logging.level.org.springframework.web.client.RestTemplate=${LOG_LEVEL:INFO}
logging.level.com.canermastan.hotel=${LOG_LEVEL:INFO}
logging.level.org.springframework.security=DEBUG
logging.level.org.hibernate.SQL=DEBUG
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE

# Bean Configuration
spring.main.allow-bean-definition-overriding=true