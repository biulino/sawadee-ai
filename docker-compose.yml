version: '3.8'

services:
  # Database
  postgres:
    image: postgres:15
    container_name: sawadee-postgres
    environment:
      POSTGRES_DB: sawadee_hotel
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password123
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init:/docker-entrypoint-initdb.d
    networks:
      - sawadee-network

  # Cache
  redis:
    image: redis:7-alpine
    container_name: sawadee-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - sawadee-network

  # Authentication
  keycloak:
    image: quay.io/keycloak/keycloak:22.0
    container_name: sawadee-keycloak
    environment:
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin123
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://postgres:5432/keycloak
      KC_DB_USERNAME: postgres
      KC_DB_PASSWORD: password123
    ports:
      - "8082:8080"
    depends_on:
      - postgres
    command: start-dev
    networks:
      - sawadee-network

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: sawadee-backend
    environment:
      SPRING_PROFILES_ACTIVE: docker
      DB_HOST: postgres
      DB_PORT: 5432
      DB_NAME: sawadee_hotel
      DB_USER: postgres
      DB_PASSWORD: password123
      REDIS_HOST: redis
      REDIS_PORT: 6379
      KEYCLOAK_URL: http://keycloak:8080
    ports:
      - "8080:8080"
    depends_on:
      - postgres
      - redis
      - keycloak
    networks:
      - sawadee-network

  # AI Chatbot Service
  ai-chatbot:
    build:
      context: ./ai-services/chatbot
      dockerfile: Dockerfile
    container_name: sawadee-ai-chatbot
    environment:
      FLASK_ENV: production
      BACKEND_URL: http://backend:8080
    ports:
      - "5000:5000"
    depends_on:
      - backend
    networks:
      - sawadee-network

  # AI Recommendation Service
  ai-recommendations:
    build:
      context: ./ai-services/recommendations
      dockerfile: Dockerfile
    container_name: sawadee-ai-recommendations
    environment:
      FLASK_ENV: production
      BACKEND_URL: http://backend:8080
    ports:
      - "5001:5001"
    depends_on:
      - backend
    networks:
      - sawadee-network

  # Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: sawadee-frontend
    environment:
      REACT_APP_API_URL: http://localhost:8080
      REACT_APP_KEYCLOAK_URL: http://localhost:8082
      REACT_APP_AI_CHATBOT_URL: http://localhost:5000
    ports:
      - "3000:3000"
    depends_on:
      - backend
    networks:
      - sawadee-network

  # Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: sawadee-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./docker/nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./docker/nginx/ssl:/etc/nginx/ssl
    depends_on:
      - frontend
      - backend
    networks:
      - sawadee-network

volumes:
  postgres_data:
  redis_data:

networks:
  sawadee-network:
    driver: bridge
